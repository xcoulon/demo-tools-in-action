package org.jboss.examples.conferences.domain;

// Generated Oct 31, 2014 3:44:38 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Session generated by hbm2java
 */
@Entity
@Table(name = "SESSION", schema = "PUBLIC", catalog = "CONFERENCES")
public class Session implements java.io.Serializable {

	private long id;
	private Integer version;
	private Conference conference;
	private String description;
	private Date endTime;
	private String location;
	private String name;
	private Date startTime;
	private Set<Speaker> speakers = new HashSet<Speaker>(0);

	public Session() {
	}

	public Session(long id) {
		this.id = id;
	}

	public Session(long id, Conference conference, String description,
			Date endTime, String location, String name, Date startTime,
			Set<Speaker> speakers) {
		this.id = id;
		this.conference = conference;
		this.description = description;
		this.endTime = endTime;
		this.location = location;
		this.name = name;
		this.startTime = startTime;
		this.speakers = speakers;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CONFERENCE_ID")
	public Conference getConference() {
		return this.conference;
	}

	public void setConference(Conference conference) {
		this.conference = conference;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "END_TIME", length = 23)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "LOCATION")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "NAME")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "START_TIME", length = 23)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "SESSION_SPEAKER", schema = "PUBLIC", catalog = "CONFERENCES", joinColumns = { @JoinColumn(name = "SESSION_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "SPEAKERS_ID", nullable = false, updatable = false) })
	public Set<Speaker> getSpeakers() {
		return this.speakers;
	}

	public void setSpeakers(Set<Speaker> speakers) {
		this.speakers = speakers;
	}

}
